/* Generated By:JavaCC: Do not edit this line. RusskiyCompilerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RusskiyCompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VOID = 6;
  /** RegularExpression Id. */
  int INT = 7;
  /** RegularExpression Id. */
  int FLOAT = 8;
  /** RegularExpression Id. */
  int STRING_TYPE = 9;
  /** RegularExpression Id. */
  int STRING_VALUE = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int FOR = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int PRINT = 15;
  /** RegularExpression Id. */
  int INPUT = 16;
  /** RegularExpression Id. */
  int E = 17;
  /** RegularExpression Id. */
  int OU = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int IDENTIFIER = 21;
  /** RegularExpression Id. */
  int NUMBER = 22;
  /** RegularExpression Id. */
  int PLUS = 23;
  /** RegularExpression Id. */
  int INC = 24;
  /** RegularExpression Id. */
  int MINUS = 25;
  /** RegularExpression Id. */
  int DEC = 26;
  /** RegularExpression Id. */
  int MULT = 27;
  /** RegularExpression Id. */
  int DIVINT = 28;
  /** RegularExpression Id. */
  int DIV = 29;
  /** RegularExpression Id. */
  int POW = 30;
  /** RegularExpression Id. */
  int MOD = 31;
  /** RegularExpression Id. */
  int LPAREN = 32;
  /** RegularExpression Id. */
  int RPAREN = 33;
  /** RegularExpression Id. */
  int SEMICOLON = 34;
  /** RegularExpression Id. */
  int COMMA = 35;
  /** RegularExpression Id. */
  int LBRACE = 36;
  /** RegularExpression Id. */
  int RBRACE = 37;
  /** RegularExpression Id. */
  int DOT = 38;
  /** RegularExpression Id. */
  int EQ = 39;
  /** RegularExpression Id. */
  int NEQ = 40;
  /** RegularExpression Id. */
  int LT = 41;
  /** RegularExpression Id. */
  int GT = 42;
  /** RegularExpression Id. */
  int LEQ = 43;
  /** RegularExpression Id. */
  int GEQ = 44;
  /** RegularExpression Id. */
  int ASSIGN = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"pusto\"",
    "\"tseloye\"",
    "\"drobnoye\"",
    "\"slova\"",
    "<STRING_VALUE>",
    "\"yesli\"",
    "\"inache\"",
    "\"kazhday\"",
    "\"poka\"",
    "\"vyvod\"",
    "\"vvod\"",
    "\"/i\"",
    "\"ili\"",
    "\"true\"",
    "\"false\"",
    "<IDENTIFIER>",
    "<NUMBER>",
    "\"+\"",
    "\"++\"",
    "\"-\"",
    "\"--\"",
    "\"*\"",
    "\"//\"",
    "\"/\"",
    "\"**\"",
    "\"%\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\".\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"=\"",
  };

}
